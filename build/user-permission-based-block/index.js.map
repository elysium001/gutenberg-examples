{"version":3,"file":"user-permission-based-block/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNsD;AACM;AACV;AACN;AACR;AAEpC,MAAMK,IAAI,GAAGA,CAAA,KAAM,IAAI;AAEvBL,oEAAiB,CAACI,6CAAa,EAAE;EAC7B,GAAGA,wCAAQ;EACXG,IAAI,EAAEA,CAAA,KAAM;IAER,MAAM;MAAEC,eAAe;MAAEC;IAAwB,CAAC,GAAGN,0DAAS,CAAEO,MAAM,IAAK;MACvE,OAAO;QACHF,eAAe,EAAEE,MAAM,CAAC,MAAM,CAAC,CAACC,cAAc,CAAC,CAAC,EAAEC,KAAK;QACvDH,uBAAuB,EAAEC,MAAM,CAAC,MAAM,CAAC,CAACC,cAAc,CAAC,CAAC,EAAEE;MAC9D,CAAC;IACL,CAAC,CAAC;IAEF,OACIC,oDAAA,CAAAC,2CAAA,QAGID,oDAAA,CAACb,sEAAiB,QACda,oDAAA,CAACZ,4DAAS;MAACc,KAAK,EAAC;IAAW,GACvBR,eAAe,EAAES,QAAQ,CAAC,eAAe,CAAC,IACvCH,oDAAA,YAAG,0CAA2C,CACjD,EAEAN,eAAe,EAAES,QAAQ,CAAC,QAAQ,CAAC,IAChCH,oDAAA,YAAG,mCAAoC,CAC1C,EAGA,CAACN,eAAe,IACbM,oDAAA,YAAG,2CAA4C,CAE5C,CACI,CAAC,EAEpBA,oDAAA,cACIA,oDAAA,aAAI,6BAA+B,CAAC,EACpCA,oDAAA,YAAG,+BAAgC,CAClC,CACP,CAAC;EAEX,CAAC;EACDT;AACJ,CAAC,CAAC,C","sources":["webpack://gutenberg-customizations/external window \"React\"","webpack://gutenberg-customizations/external window [\"wp\",\"blockEditor\"]","webpack://gutenberg-customizations/external window [\"wp\",\"blocks\"]","webpack://gutenberg-customizations/external window [\"wp\",\"components\"]","webpack://gutenberg-customizations/external window [\"wp\",\"data\"]","webpack://gutenberg-customizations/webpack/bootstrap","webpack://gutenberg-customizations/webpack/runtime/compat get default export","webpack://gutenberg-customizations/webpack/runtime/define property getters","webpack://gutenberg-customizations/webpack/runtime/hasOwnProperty shorthand","webpack://gutenberg-customizations/webpack/runtime/make namespace object","webpack://gutenberg-customizations/./src/user-permission-based-block/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport metadata from './block.json';\n\nconst save = () => null;\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit: () => {\n\n        const { currentUserRole, currentUserCapabilities } = useSelect((select) => {\n            return {\n                currentUserRole: select('core').getCurrentUser()?.roles,\n                currentUserCapabilities: select('core').getCurrentUser()?.capabilities,\n            };\n        });\n\n        return (\n            <>\n                {/* sidebar here with one option */}\n\n                <InspectorControls>\n                    <PanelBody title=\"User Role\">\n                        {currentUserRole?.includes('administrator') && (\n                            <p>Only administrators can see this message</p>\n                        )}\n\n                        {currentUserRole?.includes('editor') && (\n                            <p>Only editors can see this message</p>\n                        )}\n\n                        {/* if currentUserRole does not exist */}\n                        {!currentUserRole && (\n                            <p>Only logged in users can see this message</p>\n                        )}\n                    </PanelBody>\n                </InspectorControls>\n\n                <div>\n                    <h2>User Permission Based Block</h2>\n                    <p>Everyone can see this message</p>\n                </div>\n            </>\n        );\n    },\n    save,\n});"],"names":["registerBlockType","InspectorControls","PanelBody","useSelect","metadata","save","name","edit","currentUserRole","currentUserCapabilities","select","getCurrentUser","roles","capabilities","createElement","Fragment","title","includes"],"sourceRoot":""}